{"version":3,"sources":["index.js"],"names":["readFileSync","require","Tabs","constructor","rootSelector","activeControlClass","activePaneClass","activeTab","_refs","_getRefs","_activeControlClass","_activePaneClass","_activeTabIdx","_bindEvents","_setActiveTab","root","refs","controls","document","querySelector","panes","addEventListener","_onControlsClick","bind","e","preventDefault","target","nodeName","_removeActiveTab","controlItem","classList","add","paneId","_getPaneId","_serActivePane","controlItems","control","querySelectorAll","currentActiveControlItem","remove","_removeActivePane","_getPaneById","getAttribute","slice","id","tabs1","console","log"],"mappings":";;;AAAA,MAAM,aAAEA,GAAiBC,QAAQ,MAGjC,MAAMC,EACJC,aAAY,aACVC,EADU,mBAEVC,EAAqB,SAFX,gBAGVC,EAAkB,SAHR,UAIVC,EAAY,IAEPC,KAAAA,MAAQ,KAAKC,SAASL,GACtBM,KAAAA,oBAAsBL,EACtBM,KAAAA,iBAAmBL,EACnBM,KAAAA,cAAgBL,EAAY,EAC5BM,KAAAA,cACAC,KAAAA,gBAEPL,SAASM,GACDC,MAAAA,EAAO,GAGNA,OAFPA,EAAKC,SAAWC,SAASC,iBAAiBJ,qBAC1CC,EAAKI,MAAQF,SAASC,iBAAiBJ,kBAChCC,EAETH,cACOL,KAAAA,MAAMS,SAASI,iBAClB,QACA,KAAKC,iBAAiBC,KAAK,OAG/BD,iBAAiBE,GAGXA,GAFJA,EAAEC,iBAEwB,MAAtBD,EAAEE,OAAOC,SACX,OAEGC,KAAAA,mBACCC,MAAAA,EAAcL,EAAEE,OACtBG,EAAYC,UAAUC,IAAI,KAAKrB,qBACzBsB,MAAAA,EAAS,KAAKC,WAAWJ,GAC1BK,KAAAA,eAAeF,GAEtBlB,gBACQqB,MACAC,EADe,KAAK5B,MAAMS,SAASoB,iBAAiB,KAC7B,KAAKzB,eAClCwB,EAAQN,UAAUC,IAAI,KAAKrB,qBACrBsB,MAAAA,EAAS,KAAKC,WAAWG,GAC1BF,KAAAA,eAAeF,GAEtBJ,mBACQU,MAAAA,EAA2B,KAAK9B,MAAMS,SAASE,kBAC/C,KAAKT,uBAEP,IAAC4B,EACH,OAEFA,EAAyBR,UAAUS,OAAO,KAAK7B,qBACzCsB,MAAAA,EAAS,KAAKC,WAAWK,GAC1BE,KAAAA,kBAAkBR,GAEzBE,eAAeF,GACA,KAAKS,aAAaT,GAC1BF,UAAUC,IAAI,KAAKpB,kBAE1B6B,kBAAkBR,GACH,KAAKS,aAAaT,GAC1BF,UAAUS,OAAO,KAAK5B,kBAE7BsB,WAAWG,GACFA,OAAAA,EAAQM,aAAa,QAAQC,MAAM,GAE5CF,aAAaG,GACJ,OAAA,KAAKpC,MAAMY,MAAMD,kBAAkByB,MAG9C,MAAMC,EAAQ,IAAI3C,EAAK,CACrBE,aAAc,UACdC,mBAAoB,uBACpBC,gBAAiB,eACjBC,UAAW,IAEbuC,QAAQC,IAAIF","file":"src.aec9152e.js","sourceRoot":"../src","sourcesContent":["const { readFileSync } = require('fs');\n\n// import app from './js/app';\nclass Tabs {\n  constructor({\n    rootSelector,\n    activeControlClass = 'active',\n    activePaneClass = 'active',\n    activeTab = 1,\n  }) {\n    this._refs = this._getRefs(rootSelector);\n    this._activeControlClass = activeControlClass;\n    this._activePaneClass = activePaneClass;\n    this._activeTabIdx = activeTab - 1;\n    this._bindEvents();\n    this._setActiveTab();\n  }\n  _getRefs(root) {\n    const refs = {};\n    refs.controls = document.querySelector(`${root} [data-controls]`);\n    refs.panes = document.querySelector(`${root} [data-panes]`);\n    return refs;\n  }\n  _bindEvents() {\n    this._refs.controls.addEventListener(\n      'click',\n      this._onControlsClick.bind(this),\n    );\n  }\n  _onControlsClick(e) {\n    e.preventDefault();\n\n    if (e.target.nodeName !== 'A') {\n      return;\n    }\n    this._removeActiveTab();\n    const controlItem = e.target;\n    controlItem.classList.add(this._activeControlClass);\n    const paneId = this._getPaneId(controlItem);\n    this._serActivePane(paneId);\n  }\n  _setActiveTab() {\n    const controlItems = this._refs.controls.querySelectorAll('a');\n    const control = controlItems[this._activeTabIdx];\n    control.classList.add(this._activeControlClass);\n    const paneId = this._getPaneId(control);\n    this._serActivePane(paneId);\n  }\n  _removeActiveTab() {\n    const currentActiveControlItem = this._refs.controls.querySelector(\n      `.${this._activeControlClass}`,\n    );\n    if (!currentActiveControlItem) {\n      return;\n    }\n    currentActiveControlItem.classList.remove(this._activeControlClass);\n    const paneId = this._getPaneId(currentActiveControlItem);\n    this._removeActivePane(paneId);\n  }\n  _serActivePane(paneId) {\n    const pane = this._getPaneById(paneId);\n    pane.classList.add(this._activePaneClass);\n  }\n  _removeActivePane(paneId) {\n    const pane = this._getPaneById(paneId);\n    pane.classList.remove(this._activePaneClass);\n  }\n  _getPaneId(control) {\n    return control.getAttribute('href').slice(1);\n  }\n  _getPaneById(id) {\n    return this._refs.panes.querySelector(`#${id}`);\n  }\n}\nconst tabs1 = new Tabs({\n  rootSelector: '#tabs-1',\n  activeControlClass: 'control-item--active',\n  activePaneClass: 'pane--active',\n  activeTab: 1,\n});\nconsole.log(tabs1);\n"]}